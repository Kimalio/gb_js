
"use strict";

let exp1 = 10 + 10 + "10";
console.log(exp1);
/*  
    1. 10 + 10 получаем 20 (Number);
    2. далее прибавляем строку '10';
    3. 20 меняет тип на строку '20';
    4. конткатенируется '20'и'10';
    5. вывод в консоль;
*/

let exp2 = 10 + "10" + 10;
console.log(exp2);
/* 
    1. первым же действием для выполнения операции сложения,
    первое слагаемое меняет тип Number на тип String второго слагаемого,
    получаем '10' и '10';
    2. теперь, собственно, идёт конкатенация первых двух слагаемых,
    в результате получаем '1010';
    3. происходит то же самое, что и в первом действии, 
    только слагаемые в другом порядке стоят, получается '1010' и '10';
    4. конкатенация последних слагаемых, и в итоге получаем '101010';
    5. вывод в консоль;
*/

let exp3 = 10 + 10 + +"10";
console.log(exp3);
/*  
    1. 10 + 10 = 20;
    2. +'10', здесь унарный плюс помогает третьему слагаемому изменить тип на Number;
    3. 20 + 10 = 30;
    4. вывод в консоль;

*/

let exp4 = 10 / -"";
console.log(exp4);
/* 
    1. унарный минус превращает пустую строку в -0;
    2. 10 / -0;
    3. в результате получаем минус бесконечность;
    4. вывод в консоль;
*/

let exp5 = 10 / +"2,5";
console.log(exp5);
/* 
    1. по всей видимости, из-за запятой вместо точки в вещественном числе,
    унарный плюс не меняет типизацию "2,5" в Number;
    2. 10 делится на строку и результатом получаем Not a Number - NaN;
    3. вывод NaN в консоль
*/
